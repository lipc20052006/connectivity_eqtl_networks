###########################################
#  OPPERA
oppera_cluster_input <- read.delim("~/Desktop/PainCluster_Paper/Data/oppera_cluster_input_scl.txt", stringsAsFactors=FALSE)
op_scaled_scl <- scale(oppera_cluster_input[,c('ppt_trapezius','SCL_90R_Somatization','SCL_90R_Depression','SCL_90R_Anxiety')])
op_scaled_scl_id <- oppera_cluster_input$respid
oppera_cluster_input <- read.delim("~/Desktop/PainCluster_Paper/Data/oppera_cluster_input_bsi.txt", stringsAsFactors=FALSE)
op_scaled_bsi <- scale(oppera_cluster_input[,c("ppt_trapezius", "somatBSI", "depressBSI", "anxBSI")])
op_scaled_bsi_id <- oppera_cluster_input$respid
rm(oppera_cluster_input)
#  DIPT
dipt_cluster_input <- read.delim("~/Desktop/PainCluster_Paper/Data/dipt_cluster_input_bsi.txt", stringsAsFactors=FALSE)
dipt_cluster_input$score_bsi18_somat <- dipt_cluster_input$score_bsi18_somat - 1
dipt_cluster_input$score_bsi18_dep <- dipt_cluster_input$score_bsi18_dep - 1
dipt_cluster_input$score_bsi18_anxiety <- dipt_cluster_input$score_bsi18_anxiety - 1
dipt_scaled_bsi <- scale(dipt_cluster_input[,c("score_ppt","score_bsi18_somat","score_bsi18_dep","score_bsi18_anxiety")])
dipt_scaled_bsi_id <- dipt_cluster_input$RecordID
rm(dipt_cluster_input)
set.seed(928); dipt_denovo <- data.frame(cbind(dipt_scaled_bsi_id, kmeans(dipt_scaled_bsi, 4, nstart=10)$cluster))
names(dipt_denovo) <- c('RecordID', 'cluster_bsi')
rm(dipt_scaled_bsi); rm(dipt_scaled_bsi_id)
dipt_denovo
DIPT
dipt_cluster_input <- read.delim("~/Desktop/PainCluster_Paper/Data/dipt_cluster_input_bsi.txt", stringsAsFactors=FALSE)
dipt_cluster_input$score_bsi18_somat <- dipt_cluster_input$score_bsi18_somat - 1
dipt_cluster_input$score_bsi18_dep <- dipt_cluster_input$score_bsi18_dep - 1
dipt_cluster_input$score_bsi18_anxiety <- dipt_cluster_input$score_bsi18_anxiety - 1
dipt_cluster_opbased <- data.frame(cbind( dipt_cluster_input$RecordID,
cluster.predict(dipt_cluster_input[,c("score_ppt")],dipt_cluster_input[,c("score_bsi18_dep")],
dipt_cluster_input[,c("score_bsi18_somat")],dipt_cluster_input[,c("score_bsi18_anxiety")])))
names(dipt_cluster_opbased) <- c('RecordID', 'cluster_op')
dipt_clusters <- merge(dipt_denovo, dipt_cluster_opbased, by='RecordID', all=T)
table(dipt_clusters)
head(dipt_cluster_input)
head(dipt_clusters)
table(dipt_clusters$cluster_bsi, dipt_clusters$cluster_op)
204+25+1
4+199+56
74+10+68
traits <- c("PASS_AgeFirstBirth.sumstats.gz" "PASS_Anorexia.sumstats.gz" "PASS_Autism.sumstats.gz" "PASS_BMI1.sumstats.gz"
"PASS_Coronary_Artery_Disease.sumstats.gz"
"PASS_Crohns_Disease.sumstats.gz" "PASS_DS.sumstats.gz" "PASS_Ever_Smoked.sumstats.gz" "PASS_HDL.sumstats.gz"
"PASS_Height1.sumstats.gz"
"PASS_LDL.sumstats.gz" "PASS_NumberChildrenEverBorn.sumstats.gz" "PASS_Rheumatoid_Arthritis.sumstats.gz"
"PASS_Schizophrenia.sumstats.gz" "PASS_Type_2_Diabetes.sumstats.gz"
"PASS_Ulcerative_Colitis.sumstats.gz" "PASS_Years_of_Education2.sumstats.gz" "UKB_460K.blood_EOSINOPHIL_COUNT.sumstats.gz"
"UKB_460K.blood_PLATELET_COUNT.sumstats.gz"
"UKB_460K.blood_RBC_DISTRIB_WIDTH.sumstats.gz" "UKB_460K.blood_RED_COUNT.sumstats.gz" "UKB_460K.blood_WHITE_COUNT.sumstats.gz"
"UKB_460K.bmd_HEEL_TSCOREz.sumstats.gz"
"UKB_460K.body_BALDING1.sumstats.gz" "UKB_460K.body_BMIz.sumstats.gz" "UKB_460K.body_HEIGHTz.sumstats.gz"
"UKB_460K.body_WHRadjBMIz.sumstats.gz"
"UKB_460K.bp_SYSTOLICadjMEDz.sumstats.gz" "UKB_460K.cov_EDU_YEARS.sumstats.gz" "UKB_460K.cov_SMOKING_STATUS.sumstats.gz"
"UKB_460K.disease_AID_SURE.sumstats.gz"
"UKB_460K.disease_ALLERGY_ECZEMA_DIAGNOSED.sumstats.gz" "UKB_460K.disease_DERMATOLOGY.sumstats.gz"
"UKB_460K.disease_HI_CHOL_SELF_REP.sumstats.gz"
"UKB_460K.disease_HYPOTHYROIDISM_SELF_REP.sumstats.gz" "UKB_460K.disease_RESPIRATORY_ENT.sumstats.gz"
"UKB_460K.disease_T2D.sumstats.gz"
"UKB_460K.lung_FEV1FVCzSMOKE.sumstats.gz" "UKB_460K.lung_FVCzSMOKE.sumstats.gz" "UKB_460K.mental_NEUROTICISM.sumstats.gz"
"UKB_460K.other_MORNINGPERSON.sumstats.gz"
"UKB_460K.pigment_HAIR.sumstats.gz" "UKB_460K.pigment_SKIN.sumstats.gz" "UKB_460K.pigment_SUNBURN.sumstats.gz"
"UKB_460K.pigment_TANNING.sumstats.gz"
"UKB_460K.repro_MENARCHE_AGE.sumstats.gz" "UKB_460K.repro_MENOPAUSE_AGE.sumstats.gz");
full_ldsc <- ('bh_deg_log_scale.', traits, '.results')
traits <- c("PASS_AgeFirstBirth.sumstats.gz", "PASS_Anorexia.sumstats.gz", "PASS_Autism.sumstats.gz", "PASS_BMI1.sumstats.gz",
"PASS_Coronary_Artery_Disease.sumstats.gz",
"PASS_Crohns_Disease.sumstats.gz", "PASS_DS.sumstats.gz", "PASS_Ever_Smoked.sumstats.gz", "PASS_HDL.sumstats.gz",
"PASS_Height1.sumstats.gz",
"PASS_LDL.sumstats.gz", "PASS_NumberChildrenEverBorn.sumstats.gz", "PASS_Rheumatoid_Arthritis.sumstats.gz",
"PASS_Schizophrenia.sumstats.gz", "PASS_Type_2_Diabetes.sumstats.gz",
"PASS_Ulcerative_Colitis.sumstats.gz", "PASS_Years_of_Education2.sumstats.gz", "UKB_460K.blood_EOSINOPHIL_COUNT.sumstats.gz",
"UKB_460K.blood_PLATELET_COUNT.sumstats.gz",
"UKB_460K.blood_RBC_DISTRIB_WIDTH.sumstats.gz", "UKB_460K.blood_RED_COUNT.sumstats.gz", "UKB_460K.blood_WHITE_COUNT.sumstats.gz",
"UKB_460K.bmd_HEEL_TSCOREz.sumstats.gz",
"UKB_460K.body_BALDING1.sumstats.gz", "UKB_460K.body_BMIz.sumstats.gz", "UKB_460K.body_HEIGHTz.sumstats.gz",
"UKB_460K.body_WHRadjBMIz.sumstats.gz",
"UKB_460K.bp_SYSTOLICadjMEDz.sumstats.gz", "UKB_460K.cov_EDU_YEARS.sumstats.gz", "UKB_460K.cov_SMOKING_STATUS.sumstats.gz",
"UKB_460K.disease_AID_SURE.sumstats.gz",
"UKB_460K.disease_ALLERGY_ECZEMA_DIAGNOSED.sumstats.gz", "UKB_460K.disease_DERMATOLOGY.sumstats.gz",
"UKB_460K.disease_HI_CHOL_SELF_REP.sumstats.gz",
"UKB_460K.disease_HYPOTHYROIDISM_SELF_REP.sumstats.gz", "UKB_460K.disease_RESPIRATORY_ENT.sumstats.gz",
"UKB_460K.disease_T2D.sumstats.gz",
"UKB_460K.lung_FEV1FVCzSMOKE.sumstats.gz", "UKB_460K.lung_FVCzSMOKE.sumstats.gz", "UKB_460K.mental_NEUROTICISM.sumstats.gz",
"UKB_460K.other_MORNINGPERSON.sumstats.gz",
"UKB_460K.pigment_HAIR.sumstats.gz", "UKB_460K.pigment_SKIN.sumstats.gz", "UKB_460K.pigment_SUNBURN.sumstats.gz",
"UKB_460K.pigment_TANNING.sumstats.gz",
"UKB_460K.repro_MENARCHE_AGE.sumstats.gz", "UKB_460K.repro_MENOPAUSE_AGE.sumstats.gz");
full_ldsc <- ('bh_deg_log_scale.', traits, '.results')
full_ldsc <- paste0('bh_deg_log_scale.', traits, '.results')
full_ldsc
bh_deg_log_scale.UKB_460K.repro_MENOPAUSE_AGE.sumstats.gz.results
rm(list=ls())
aa <- readRDS('/Volumes/Macintosh HD/Users/sheilagaynor/Desktop/GTEx_degree_centrality_out/Out/CountComparison.Rds')
View(aa)
View(aa)
aa <- readRDS('/Volumes/Macintosh HD/Users/sheilagaynor/Desktop/GTEx_degree_centrality_out/Out/CountComparison.Rds')
View(aa)
min(aa[,7])
max(aa[,7])
aa$perc <- paste0( round(aa[,7]*100, 3) , '%')
View(aa)
aa$perc <- paste0( round(aa[,7]*100, 1) , '%')
View(aa)
library(xtable)
View(aa)
xtable(gtex_comparison[,c(1:5,8)])
xtable(aa[,c(1:5,8)])
rm(list=ls())
library(dplyr)
library(data.table)
S <- '~/Desktop/TOPMed_PFT_F8/Data/ARIC/'
Sdir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.csv(paste(S,"/ARIC_LUNGPFT_20171110.csv",sep=''),header=T);
colnames(data_COPD)[8]="subject_id" # col number changes with study
#### SDir is the file directory for sample annotation
mapping=read.table(paste(SDir,"/freeze8_sample_annot_2019-07-30.txt",sep=''),header=T,sep="\t"); dim(mapping);
rm(list=ls())
rm(list=ls())
library(dplyr)
library(data.table)
S <- '~/Desktop/TOPMed_PFT_F8/Data/ARIC/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.csv(paste(S,"/ARIC_LUNGPFT_20171110.csv",sep=''),header=T);
colnames(data_COPD)[8]="subject_id" # col number changes with study
#### SDir is the file directory for sample annotation
mapping=read.table(paste(SDir,"/freeze8_sample_annot_2019-07-30.txt",sep=''),header=T,sep="\t"); dim(mapping);
idx=which(mapping$study=="ARIC"); length(idx);
id_mapping=mapping[idx,c("subject_id","sample.id")]; dim(id_mapping); # get id_mapping file for a specific study
# check if there is any dup/NA for sample ID from mapping file
sum(is.na(id_mapping$sample.id)==T | duplicated(id_mapping$sample.id)==T)
# check if there is any dup/NA for subject ID from mapping file
if ( sum(is.na(id_mapping$subject_id))==0 ) { id_mapping2=id_mapping }
if ( sum(is.na(id_mapping$subject_id)) > 0 ) { id_mapping2=id_mapping[!is.na(id_mapping$subject_id),] }
dim(id_mapping2);
if ( sum(duplicated(id_mapping2$subject_id))==0 ) { id_mapping3=id_mapping2 }
if ( sum(duplicated(id_mapping2$subject_id)) > 0 ) {
dup.subject.id=unique(as.character(id_mapping2[duplicated(id_mapping2$subject_id),]$subject_id));
ID=data.frame(matrix(,ncol=2,nrow=length(dup.subject.id))); colnames(ID)=c("subject_id","sample.id");
dup.idx.list=list();
for (i in 1:length(dup.subject.id)) {
dup.idx.list[[i]]=which(as.character(id_mapping2$subject_id)==dup.subject.id[i])
anno=mapping[which(as.character(mapping$subject_id)==dup.subject.id[i]),]; # dim(anno); # check original mapping file for dups
anno=anno[which(anno$study=="ARIC" & anno$exclude==F),]; ID[i,1]=as.character(dup.subject.id[i])
if (nrow(anno)==1) { ID[i,2]=as.character(anno$sample.id) }
if (nrow(anno)> 1) { ID[i,2]=as.character(anno[which(anno$LDR==min(anno$LDR)),]$sample.id) }
}
dup.idx=Reduce(union,dup.idx.list);
unique.id_mapping2=id_mapping2[-dup.idx,]; dim(unique.id_mapping2);
id_mapping3=rbind(unique.id_mapping2,ID); dim(id_mapping3)}
############################# merge NWD_id into phenotype file ######################################################
data_COPD$subject_id=as.character(data_COPD$subject_id);
id_mapping3$subject_id=as.character(id_mapping3$subject_id);
data_COPD2=inner_join(data_COPD,id_mapping3,by="subject_id"); # merge NWD_id into phenotype file
dim(data_COPD2); head(data_COPD2);
################################ remove samples failed fev1fvc QC from merged data ####################################
data_COPD3 <- data_COPD2[(data_COPD2$pre_fev1fvc_qc==1 & !is.na(data_COPD2$pre_fev1fvc_qc)),];
dim(data_COPD3); head(data_COPD3);
################################ filter data further by variable "exam" ###########################################
data_COPD3=as.data.table(data_COPD3)
data_COPD4=data_COPD3[data_COPD3[, .I[exam == max(exam)], by=subject_id]$V1];
dim(data_COPD4); head(data_COPD4);
write.table(data_COPD4,paste0('~/Desktop/TOPMed_PFT_F8/Data/Harmonized/',"MappedPheno_ARIC.txt"),row.names = F,quote = F)
rm(list=ls())
library(dplyr)
library(data.table)
S <- '~/Desktop/TOPMed_PFT_F8/Data/CARDIA/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=fread(paste(S,"/NHLBI_Pooled_Cohorts_Study_CARDIA_LungPFT_20170804_PB_dcc-revised_20200122.txt",sep=''),header=T,sep="\t",data.table=F);
colnames(data_COPD)[7]="subject_id" # col number changes with study
#### SDir is the file directory for sample annotation
mapping=fread(paste(SDir,"/freeze8_sample_annot_2019-07-30.txt",sep=''),header=T,sep="\t",stringsAsFactors=F,data.table=F); dim(mapping);
idx=which(mapping$study=="CARDIA"); length(idx);
id_mapping=mapping[idx,c("subject_id","sample.id")]; dim(id_mapping); # get id_mapping file for a specific study
# check if there is any dup/NA for sample ID from mapping file
sum(is.na(id_mapping$sample.id)==T | duplicated(id_mapping$sample.id)==T)
# check if there is any dup/NA for subject ID from mapping file
if ( sum(is.na(id_mapping$subject_id))==0 ) { id_mapping2=id_mapping }
if ( sum(is.na(id_mapping$subject_id)) > 0 ) { id_mapping2=id_mapping[!is.na(id_mapping$subject_id),] }
dim(id_mapping2);
############################ handle duplicated subject_id #########################################################
##### same subject_id with different NWD id
if ( sum(duplicated(id_mapping2$subject_id))==0 ) { id_mapping3=id_mapping2 }
if ( sum(duplicated(id_mapping2$subject_id)) > 0 ) {
dup.subject.id=unique(as.character(id_mapping2[duplicated(id_mapping2$subject_id),]$subject_id));
ID=data.frame(matrix(,ncol=2,nrow=length(dup.subject.id))); colnames(ID)=c("subject_id","sample.id");
dup.idx.list=list();
for (i in 1:length(dup.subject.id)) {
dup.idx.list[[i]]=which(as.character(id_mapping2$subject_id)==dup.subject.id[i])
anno=mapping[which(as.character(mapping$subject_id)==dup.subject.id[i]),]; # dim(anno); # check original mapping file for dups
anno=anno[which(anno$study=="CARDIA" & anno$exclude==F),]; ID[i,1]=as.character(dup.subject.id[i])
if (nrow(anno)==1) { ID[i,2]=as.character(anno$sample.id) }
if (nrow(anno)> 1) { ID[i,2]=as.character(anno[which(anno$LDR==min(anno$LDR)),]$sample.id) }
}
dup.idx=Reduce(union,dup.idx.list);
unique.id_mapping2=id_mapping2[-dup.idx,]; dim(unique.id_mapping2);
id_mapping3=rbind(unique.id_mapping2,ID); dim(id_mapping3);
}
############################# merge NWD_id into phenotype file ######################################################
data_COPD$subject_id=as.character(data_COPD$subject_id);
id_mapping3$subject_id=as.character(id_mapping3$subject_id);
data_COPD2=inner_join(data_COPD,id_mapping3,by="subject_id"); # merge NWD_id into phenotype file
dim(data_COPD2); head(data_COPD2);
################################ remove samples failed fev1fvc QC from merged data ####################################
data_COPD3 <- data_COPD2[(data_COPD2$pre_fev1fvc_qc==1 & !is.na(data_COPD2$pre_fev1fvc_qc)),];
dim(data_COPD3); head(data_COPD3);
################################ filter data further by variable "exam" ###########################################
data_COPD3=as.data.table(data_COPD3)
data_COPD4=data_COPD3[data_COPD3[, .I[exam == max(exam)], by=subject_id]$V1];
dim(data_COPD4); head(data_COPD4);
write.table(data_COPD4,paste0('~/Desktop/TOPMed_PFT_F8/Data/Harmonized/',"MappedPheno_CARDIA.txt"),row.names = F,quote = F)
rm(list=ls())
library(dplyr)
S <- '~/Desktop/TOPMed_PFT_F8/Data/CARDIA/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.table(paste(S,"/cfs_lung_export_20190510.txt",sep=''),header=T);
colnames(data_COPD)[1]="subject_id" # col number changes with study
rm(list=ls())
library(dplyr)
S <- '~/Desktop/TOPMed_PFT_F8/Data/CFS/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.table(paste(S,"/cfs_lung_export_20190510.txt",sep=''),header=T);
colnames(data_COPD)[1]="subject_id" # col number changes with study
#### SDir is the file directory for sample annotation
mapping=read.table(paste(SDir,"/freeze8_sample_annot_2019-07-30.txt",sep=''),header=T,sep="\t"); dim(mapping);
idx=which(mapping$study=="CFS"); length(idx);
id_mapping=mapping[idx,c("subject_id","sample.id")]; dim(id_mapping); # get id_mapping file for a specific study
# check if there is any dup/NA for sample ID from mapping file
sum(is.na(id_mapping$sample.id)==T | duplicated(id_mapping$sample.id)==T)
# check if there is any dup/NA for subject ID from mapping file
if ( sum(is.na(id_mapping$subject_id))==0 ) { id_mapping2=id_mapping }
if ( sum(is.na(id_mapping$subject_id)) > 0 ) { id_mapping2=id_mapping[!is.na(id_mapping$subject_id),] }
dim(id_mapping2);
############################# merge NWD_id into phenotype file ######################################################
data_COPD$subject_id=as.character(data_COPD$subject_id);
id_mapping2$subject_id=as.character(id_mapping2$subject_id);
data_COPD2=inner_join(data_COPD,id_mapping2,by="subject_id"); # merge NWD_id into phenotype file
dim(data_COPD2); head(data_COPD2);
write.table(data_COPD2,paste0('~/Desktop/TOPMed_PFT_F8/Data/Harmonized/',"MappedPheno_CFS.txt"),row.names = F,quote = F)
rm(list=ls())
library(dplyr)
library(data.table)
S <- '~/Desktop/TOPMed_PFT_F8/Data/CHS/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.csv(paste(S,"/CHS_lungpft_Phenotype_20171017_TW.csv",sep=''),header=T); # 11323x55
colnames(data_COPD)[10]="subject_id" # col number changes with study
#### SDir is the file directory for sample annotation
mapping=read.table(paste(SDir,"/freeze8_sample_annot_2019-07-30.txt",sep=''),header=T,sep="\t"); dim(mapping);
idx=which(mapping$study=="CHS"); length(idx);
id_mapping=mapping[idx,c("subject_id","sample.id")]; dim(id_mapping); # get id_mapping file for a specific study
# check if there is any dup/NA for sample ID from mapping file
sum(is.na(id_mapping$sample.id)==T | duplicated(id_mapping$sample.id)==T)
# check if there is any dup/NA for subject ID from mapping file
if ( sum(is.na(id_mapping$subject_id))==0 ) { id_mapping2=id_mapping }
if ( sum(is.na(id_mapping$subject_id)) > 0 ) { id_mapping2=id_mapping[!is.na(id_mapping$subject_id),] }
dim(id_mapping2);
############################ handle duplicated subject_id #########################################################
##### same subject_id with different NWD id
if ( sum(duplicated(id_mapping2$subject_id))==0 ) { id_mapping3=id_mapping2 }
if ( sum(duplicated(id_mapping2$subject_id)) > 0 ) {
dup.subject.id=as.character(id_mapping2[duplicated(id_mapping2$subject_id),]$subject_id);
ID=data.frame(matrix(,ncol=2,nrow=length(dup.subject.id))); colnames(ID)=c("subject_id","sample.id");
dup.idx.list=list();
for (i in 1:length(dup.subject.id)) {
dup.idx.list[[i]]=which(as.character(id_mapping2$subject_id)==dup.subject.id[i])
anno=mapping[which(as.character(mapping$subject_id)==dup.subject.id[i]),]; # dim(anno); # check original mapping file for dups
anno=anno[which(anno$exclude==F),]; ID[i,1]=as.character(dup.subject.id[i])
if (nrow(anno)==1) { ID[i,2]=as.character(anno$sample.id) }
if (nrow(anno)> 1) { ID[i,2]=as.character(anno[which(anno$LDR==min(anno$LDR)),]$sample.id) }
}
dup.idx=Reduce(union,dup.idx.list);
unique.id_mapping2=id_mapping2[-dup.idx,]; # dim(unique.id_mapping2);
id_mapping3=rbind(unique.id_mapping2,ID); } # dim(id_mapping3);
############################# merge NWD_id into phenotype file ######################################################
data_COPD$subject_id=as.character(data_COPD$subject_id);
id_mapping3$subject_id=as.character(id_mapping3$subject_id);
data_COPD2=inner_join(data_COPD,id_mapping3,by="subject_id"); # merge NWD_id into phenotype file
dim(data_COPD2); head(data_COPD2);
################################ remove samples failed fev1fvc QC from merged data ####################################
data_COPD3 <- data_COPD2[(data_COPD2$pre_fev1fvc_qc==1 & !is.na(data_COPD2$pre_fev1fvc_qc)),];
dim(data_COPD3); head(data_COPD3);
################################ filter data further by variable "exam" ###########################################
data_COPD3=as.data.table(data_COPD3)
data_COPD4=data_COPD3[data_COPD3[, .I[exam == max(exam)], by=subject_id]$V1];
dim(data_COPD4); head(data_COPD4);
################################ filter data further by variable "race" ###########################################
table(data_COPD4$race)
data_COPD5 <- data_COPD4[!(data_COPD4$race==6),];
dim(data_COPD5); head(data_COPD5);
write.table(data_COPD5,paste0('~/Desktop/TOPMed_PFT_F8/Data/Harmonized/',"MappedPheno_CHS.txt"),row.names = F,quote = F)
rm(list=ls())
library(dplyr)
S <- '~/Desktop/TOPMed_PFT_F8/Data/FHS_Gen3/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.csv(paste(S,"/NHLBI_Pooled_Cohorts_Study_fhs_gen3_lungpft_20191108_pb_18.csv",sep=''),header=T);
dim(data_COPD); head(data_COPD);
colnames(data_COPD)[1]="subject_id" # col number changes with study
#### SDir is the file directory for sample annotation
mapping=read.table(paste(SDir,"/freeze8_sample_annot_2019-07-30.txt",sep=''),header=T,sep="\t"); dim(mapping);
idx=which(mapping$study=="FHS"); length(idx);
id_mapping=mapping[idx,c("subject_id","sample.id")]; dim(id_mapping); # get id_mapping file for a specific study
# check if there is any dup/NA for sample ID from mapping file
sum(is.na(id_mapping$sample.id)==T | duplicated(id_mapping$sample.id)==T)
# check if there is any dup/NA for subject ID from mapping file
if ( sum(is.na(id_mapping$subject_id))==0 ) { id_mapping2=id_mapping }
if ( sum(is.na(id_mapping$subject_id)) > 0 ) { id_mapping2=id_mapping[!is.na(id_mapping$subject_id),] }
dim(id_mapping2);
if ( sum(duplicated(id_mapping2$subject_id))==0 ) { id_mapping3=id_mapping2 }
if ( sum(duplicated(id_mapping2$subject_id)) > 0 ) {
dup.subject.id=unique(as.character(id_mapping2[duplicated(id_mapping2$subject_id),]$subject_id));
ID=data.frame(matrix(,ncol=2,nrow=length(dup.subject.id))); colnames(ID)=c("subject_id","sample.id");
dup.idx.list=list();
for (i in 1:length(dup.subject.id)) {
dup.idx.list[[i]]=which(as.character(id_mapping2$subject_id)==dup.subject.id[i])
anno=mapping[which(as.character(mapping$subject_id)==dup.subject.id[i]),]; # dim(anno); # check original mapping file for dups
anno=anno[which(anno$study=="FHS" & anno$exclude==F),]; ID[i,1]=as.character(dup.subject.id[i])
if (nrow(anno)==1) { ID[i,2]=as.character(anno$sample.id) }
if (nrow(anno)> 1) { ID[i,2]=as.character(anno[which(anno$LDR==min(anno$LDR)),]$sample.id) }
}
dup.idx=Reduce(union,dup.idx.list);
unique.id_mapping2=id_mapping2[-dup.idx,]; dim(unique.id_mapping2);
id_mapping3=rbind(unique.id_mapping2,ID); dim(id_mapping3);}
############################# merge NWD_id into phenotype file ######################################################
data_COPD$subject_id=as.character(data_COPD$subject_id);
id_mapping3$subject_id=as.character(id_mapping3$subject_id);
data_COPD2=inner_join(data_COPD,id_mapping3,by="subject_id"); # merge NWD_id into phenotype file
dim(data_COPD2); head(data_COPD2);
################################ remove samples failed fev1fvc QC from merged data ####################################
data_COPD3 <- data_COPD2[(data_COPD2$pre_fev1fvc_qc==1 & !is.na(data_COPD2$pre_fev1fvc_qc)),];
dim(data_COPD3); head(data_COPD3);
################################ filter data further by variable "count" ###########################################
data_COPD4 <- data_COPD3[data_COPD3$count==1,];
dim(data_COPD4); head(data_COPD4);
################################## filter data further by variable "race" ###########################################
data_COPD5 <- data_COPD4[(data_COPD4$race==1 & !is.na(data_COPD4$race)),];
dim(data_COPD5); head(data_COPD5);
write.table(data_COPD5,paste0('~/Desktop/TOPMed_PFT_F8/Data/Harmonized/',"MappedPheno_FHS_Gen3.txt"),row.names = F,quote = F)
rm(list=ls())
library(dplyr)
S <- '~/Desktop/TOPMed_PFT_F8/Data/FHS_Gen3/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.csv(paste(S,"/NHLBI_Pooled_Cohorts_Study_fhs_lungpft_20170804_pb_16.csv",sep=''),header=T);
dim(data_COPD); head(data_COPD);
colnames(data_COPD)[1]="subject_id" # col number changes with study
#### SDir is the file directory for sample annotation
mapping=read.table(paste(SDir,"/freeze8_sample_annot_2019-07-30.txt",sep=''),header=T,sep="\t"); dim(mapping);
idx=which(mapping$study=="FHS"); length(idx);
id_mapping=mapping[idx,c("subject_id","sample.id")]; dim(id_mapping); # get id_mapping file for a specific study
# check if there is any dup/NA for sample ID from mapping file
sum(is.na(id_mapping$sample.id)==T | duplicated(id_mapping$sample.id)==T)
# check if there is any dup/NA for subject ID from mapping file
if ( sum(is.na(id_mapping$subject_id))==0 ) { id_mapping2=id_mapping }
if ( sum(is.na(id_mapping$subject_id)) > 0 ) { id_mapping2=id_mapping[!is.na(id_mapping$subject_id),] }
dim(id_mapping2);
if ( sum(duplicated(id_mapping2$subject_id))==0 ) { id_mapping3=id_mapping2 }
if ( sum(duplicated(id_mapping2$subject_id)) > 0 ) {
dup.subject.id=unique(as.character(id_mapping2[duplicated(id_mapping2$subject_id),]$subject_id));
ID=data.frame(matrix(,ncol=2,nrow=length(dup.subject.id))); colnames(ID)=c("subject_id","sample.id");
dup.idx.list=list();
for (i in 1:length(dup.subject.id)) {
dup.idx.list[[i]]=which(as.character(id_mapping2$subject_id)==dup.subject.id[i])
anno=mapping[which(as.character(mapping$subject_id)==dup.subject.id[i]),]; # dim(anno); # check original mapping file for dups
anno=anno[which(anno$study=="FHS" & anno$exclude==F),]; ID[i,1]=as.character(dup.subject.id[i])
if (nrow(anno)==1) { ID[i,2]=as.character(anno$sample.id) }
if (nrow(anno)> 1) { ID[i,2]=as.character(anno[which(anno$LDR==min(anno$LDR)),]$sample.id) }
}
dup.idx=Reduce(union,dup.idx.list);
unique.id_mapping2=id_mapping2[-dup.idx,]; dim(unique.id_mapping2);
id_mapping3=rbind(unique.id_mapping2,ID); dim(id_mapping3);}
############################# merge NWD_id into phenotype file ######################################################
data_COPD$subject_id=as.character(data_COPD$subject_id);
id_mapping3$subject_id=as.character(id_mapping3$subject_id);
data_COPD2=inner_join(data_COPD,id_mapping3,by="subject_id"); # merge NWD_id into phenotype file
dim(data_COPD2); head(data_COPD2);
################################ remove samples failed fev1fvc QC from merged data ####################################
data_COPD3 <- data_COPD2[(data_COPD2$pre_fev1fvc_qc==1 & !is.na(data_COPD2$pre_fev1fvc_qc)),];
dim(data_COPD3); head(data_COPD3);
################################ filter data further by variable "count" ###########################################
data_COPD4 <- data_COPD3[data_COPD3$count==1,];
dim(data_COPD4); head(data_COPD4);
write.table(data_COPD4,paste0('~/Desktop/TOPMed_PFT_F8/Data/Harmonized/',"MappedPheno_FHS.txt"),row.names = F,quote = F)
rm(list=ls())
library(dplyr)
S <- '~/Desktop/TOPMed_PFT_F8/Data/FHS_Gen3/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.csv(paste(S,"/HCHS_TOPMed_LungPFT_PHEN_20171107_MY.csv",sep=''),header=T); dim(data_COPD); head(data_COPD);
colnames(data_COPD) <- tolower(colnames(data_COPD)) # convert column names to lowercase
rm(list=ls())
library(dplyr)
S <- '~/Desktop/TOPMed_PFT_F8/Data/HCHS/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.csv(paste(S,"/HCHS_TOPMed_LungPFT_PHEN_20171107_MY.csv",sep=''),header=T); dim(data_COPD); head(data_COPD);
colnames(data_COPD) <- tolower(colnames(data_COPD)) # convert column names to lowercase
#### S is the file directory for phenotype data
data_COPD=read.csv(paste(S,"/HCHS_TOPMed_LungPFT_PHEN_20200727_MY.csv",sep=''),header=T); dim(data_COPD); head(data_COPD);
colnames(data_COPD) <- tolower(colnames(data_COPD)) # convert column names to lowercase
################################ remove samples failed fev1fvc QC from merged data ####################################
data_COPD2 <- data_COPD[(data_COPD$pre_fev1fvc_qc==1 & !is.na(data_COPD$pre_fev1fvc_qc)),];
dim(data_COPD2); head(data_COPD2);
################################ add two variables ####################################################################
data_COPD2$race <- 4 # construct the race variable (Hispanic = 4)
data_COPD2$study <- "HCHS_SOL"
write.table(data_COPD2,paste0('~/Desktop/TOPMed_PFT_F8/Data/Harmonized/',"MappedPheno_HCHS_SOL.txt"),row.names = F,quote = F)
rm(list=ls())
library(dplyr)
S <- '~/Desktop/TOPMed_PFT_F8/Data/JHS/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.csv(paste(S,"/NHLBI_Pooled_Cohorts_Study_jhs_topmed_means_March2018.csv",sep=''),header=T);
dim(data_COPD); head(data_COPD);
colnames(data_COPD)[1]="subject_id" # col number changes with study
#### SDir is the file directory for sample annotation
mapping=read.table(paste(SDir,"/freeze8_sample_annot_2019-07-30.txt",sep=''),header=T,sep="\t"); dim(mapping);
idx=which(mapping$study=="JHS"); length(idx);
id_mapping=mapping[idx,c("subject_id","sample.id")]; dim(id_mapping); # get id_mapping file for a specific study
# check if there is any dup/NA for sample ID from mapping file
sum(is.na(id_mapping$sample.id)==T | duplicated(id_mapping$sample.id)==T)
# check if there is any dup/NA for subject ID from mapping file
if ( sum(is.na(id_mapping$subject_id))==0 ) { id_mapping2=id_mapping }
if ( sum(is.na(id_mapping$subject_id)) > 0 ) { id_mapping2=id_mapping[!is.na(id_mapping$subject_id),] }
dim(id_mapping2);
############################# merge NWD_id into phenotype file ######################################################
data_COPD$subject_id=as.character(data_COPD$subject_id);
id_mapping2$subject_id=as.character(id_mapping2$subject_id);
data_COPD2=inner_join(data_COPD,id_mapping2,by="subject_id"); # merge NWD_id into phenotype file
dim(data_COPD2); head(data_COPD2);
################################ remove samples failed fev1fvc QC from merged data ####################################
################################ remove samples failed fev1fvc QC from merged data ####################################
data_COPD3 <- data_COPD2[(data_COPD2$pre_fev1fvc_qc==1 & !is.na(data_COPD2$pre_fev1fvc_qc)),];
dim(data_COPD3); head(data_COPD3);
write.table(data_COPD3,paste0('~/Desktop/TOPMed_PFT_F8/Data/Harmonized/',"MappedPheno_JHS.txt"),row.names = F,quote = F)
rm(list=ls())
library(dplyr)
library(data.table)
S <- '~/Desktop/TOPMed_PFT_F8/Data/JHS/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.table(paste(S,"/TOPMed_MESA_PFT_CVD_PB_20200722.txt",sep=''),header=T,sep="\t");
dim(data_COPD); head(data_COPD);
colnames(data_COPD)[1]="subject_id" # col number changes with study
library(dplyr)
library(data.table)
S <- '~/Desktop/TOPMed_PFT_F8/Data/MESA/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.table(paste(S,"/TOPMed_MESA_PFT_CVD_PB_20200722.txt",sep=''),header=T,sep="\t");
dim(data_COPD); head(data_COPD);
colnames(data_COPD)[1]="subject_id" # col
#### SDir is the file directory for sample annotation
mapping=read.table(paste(SDir,"/freeze8_sample_annot_2019-07-30.txt",sep=''),header=T,sep="\t"); dim(mapping);
idx=which(mapping$study=="MESA"); length(idx);
id_mapping=mapping[idx,c("subject_id","sample.id")]; dim(id_mapping); # get id_mapping file for a specific study
# check if there is any dup/NA for sample ID from mapping file
sum(is.na(id_mapping$sample.id)==T | duplicated(id_mapping$sample.id)==T)
# check if there is any dup/NA for subject ID from mapping file
if ( sum(is.na(id_mapping$subject_id))==0 ) { id_mapping2=id_mapping }
if ( sum(is.na(id_mapping$subject_id)) > 0 ) { id_mapping2=id_mapping[!is.na(id_mapping$subject_id),] }
dim(id_mapping2);
############################# merge NWD_id into phenotype file ######################################################
data_COPD$subject_id=as.character(data_COPD$subject_id);
id_mapping2$subject_id=as.character(id_mapping2$subject_id);
data_COPD2=inner_join(data_COPD,id_mapping2,by="subject_id"); # merge NWD_id into phenotype file
dim(data_COPD2); head(data_COPD2);
################################ remove samples failed fev1fvc QC from merged data ####################################
data_COPD3 <- data_COPD2[(data_COPD2$pre_fev1fvc_qc==1 & !is.na(data_COPD2$pre_fev1fvc_qc)),];
dim(data_COPD3); head(data_COPD3);
table(data_COPD3$pre_fvc_qc_grade)
table(data_COPD3$pre_fev1fvc_qc_200)
table(data_COPD2$pre_fev1fvc_qc_200)
table(data_COPD2$pre_fev1fvc_qc_150)
rm(list=ls())
library(dplyr)
library(data.table)
S <- '~/Desktop/TOPMed_PFT_F8/Data/MESA/'
SDir <- '~/Desktop/TOPMed_PFT_F8/Data'
#### S is the file directory for phenotype data
data_COPD=read.table(paste(S,"/TOPMed_MESA_PFT_CVD_PB_20200722.txt",sep=''),header=T,sep="\t");
dim(data_COPD); head(data_COPD);
colnames(data_COPD)[1]="subject_id" # col number changes with study
#### SDir is the file directory for sample annotation
mapping=read.table(paste(SDir,"/freeze8_sample_annot_2019-07-30.txt",sep=''),header=T,sep="\t"); dim(mapping);
idx=which(mapping$study=="MESA"); length(idx);
id_mapping=mapping[idx,c("subject_id","sample.id")]; dim(id_mapping); # get id_mapping file for a specific study
# check if there is any dup/NA for sample ID from mapping file
sum(is.na(id_mapping$sample.id)==T | duplicated(id_mapping$sample.id)==T)
# check if there is any dup/NA for subject ID from mapping file
if ( sum(is.na(id_mapping$subject_id))==0 ) { id_mapping2=id_mapping }
if ( sum(is.na(id_mapping$subject_id)) > 0 ) { id_mapping2=id_mapping[!is.na(id_mapping$subject_id),] }
dim(id_mapping2);
############################# merge NWD_id into phenotype file ######################################################
data_COPD$subject_id=as.character(data_COPD$subject_id);
id_mapping2$subject_id=as.character(id_mapping2$subject_id);
data_COPD2=inner_join(data_COPD,id_mapping2,by="subject_id"); # merge NWD_id into phenotype file
dim(data_COPD2); head(data_COPD2);
################################ remove samples failed fev1fvc QC from merged data ####################################
data_COPD3 <- data_COPD2[(data_COPD2$pre_fev1fvc_qc_200==1 & !is.na(data_COPD2$pre_fev1fvc_qc_200)),];
dim(data_COPD3); head(data_COPD3);
################################ filter data further by variable "exam" ###########################################
data_COPD3=as.data.table(data_COPD3)
data_COPD4=data_COPD3[data_COPD3[, .I[exam == min(exam)], by=subject_id]$V1];
dim(data_COPD4); head(data_COPD4);
write.table(data_COPD4,paste0('~/Desktop/TOPMed_PFT_F8/Data/Harmonized/',"MappedPheno_MESA.txt"),row.names = F,quote = F)
rm(list=ls())
MappedPheno_ARIC <- read.csv("~/Desktop/TOPMed_PFT_F8/Data/Harmonized/MappedPheno_ARIC.txt", sep="", stringsAsFactors=FALSE)
View(MappedPheno_ARIC)
